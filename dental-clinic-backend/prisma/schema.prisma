generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  contact   String?
  password  String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @unique
}

model User {
  id                    Int           @id @default(autoincrement())
  account               Account?
  appointmentsAsUser    Appointment[] @relation("UserAppointments")
  appointmentsAsDentist Appointment[] @relation("DentistAppointments")
  name                  String        @db.VarChar(255)
  role                  Role          @default(MEMBER)
  avatarUrl             String?       
}

model Appointment {
  id        Int        @id @default(autoincrement())
  user      User?      @relation(name: "UserAppointments", fields: [userId], references: [id])
  userId    Int?
  dentist   User?      @relation(name: "DentistAppointments", fields: [dentistId], references: [id])
  dentistId Int?
  date      DateTime
  time      String
  status    Status?
  services  Service[] 
  archived  Boolean    @default(false)
}

model Service {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  price       Int
  appointments Appointment[] 
}

enum Status {
  SCHEDULE
  ONGOING
  COMPLETED
  CANCLES
}

enum Role {
  MEMBER
  PATIENT
  STAFF
  DENTIST
  ADMIN
}
